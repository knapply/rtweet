// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// unroll_connections
List unroll_connections(const CharacterVector& from, const List& to);
RcppExport SEXP _rtweet_unroll_connections(SEXP fromSEXP, SEXP toSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const CharacterVector& >::type from(fromSEXP);
    Rcpp::traits::input_parameter< const List& >::type to(toSEXP);
    rcpp_result_gen = Rcpp::wrap(unroll_connections(from, to));
    return rcpp_result_gen;
END_RCPP
}
// unroll_users
CharacterVector unroll_users(const List& x);
RcppExport SEXP _rtweet_unroll_users(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(unroll_users(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rtweet_unroll_connections", (DL_FUNC) &_rtweet_unroll_connections, 2},
    {"_rtweet_unroll_users", (DL_FUNC) &_rtweet_unroll_users, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_rtweet(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
